/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mascova.solus.ui;

import com.mascova.solus.controller.CustomerMasterController;
import com.mascova.solus.controller.ProvinceLookupController;
import com.mascova.solus.controller.VillageLookupController;
import org.openswing.swing.client.GridControl;
import org.openswing.swing.mdi.client.InternalFrame;
import org.openswing.swing.table.java.GridDataLocator;

/**
 *
 * @author irfan
 */
public class CustomerMaster extends InternalFrame {

    private CustomerMasterController dmc = null;
    private VillageLookupController vlc = null;

    /**
     * Creates new form CustomerMaster
     */
    public CustomerMaster(CustomerMasterController dmc, VillageLookupController vlc) {
        this.dmc = dmc;
        this.vlc = vlc;
        initComponents();
        gridControl.setController(dmc);
        villageCodLookupColumn.setLookupController(vlc);        
        this.setSize(750, 330);
    }

    public GridControl getGrid() {

        return this.gridControl;
    }

    private GridDataLocator getGridDataLocator() {

        return dmc;
    }

    private String getValueObjectClassName() {
        return "com.mascova.solus.entity.Customer";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        insertButton1 = new org.openswing.swing.client.InsertButton();
        editButton1 = new org.openswing.swing.client.EditButton();
        reloadButton1 = new org.openswing.swing.client.ReloadButton();
        saveButton1 = new org.openswing.swing.client.SaveButton();
        deleteButton1 = new org.openswing.swing.client.DeleteButton();
        exportButton1 = new org.openswing.swing.client.ExportButton();
        filterButton1 = new org.openswing.swing.client.FilterButton();
        navigatorBar1 = new org.openswing.swing.client.NavigatorBar();
        gridControl = new org.openswing.swing.client.GridControl();
        idColumn = new org.openswing.swing.table.columns.client.IntegerColumn();
        passportNoColumn = new org.openswing.swing.table.columns.client.TextColumn();
        tinColumn = new org.openswing.swing.table.columns.client.TextColumn();
        nameColumn = new org.openswing.swing.table.columns.client.TextColumn();
        genderComboColumn = new org.openswing.swing.table.columns.client.ComboColumn();
        textColumn1 = new org.openswing.swing.table.columns.client.TextColumn();
        textColumn2 = new org.openswing.swing.table.columns.client.TextColumn();
        dateColumn1 = new org.openswing.swing.table.columns.client.DateColumn();
        villageCodLookupColumn = new org.openswing.swing.table.columns.client.CodLookupColumn();

        topPanel.add(insertButton1);
        topPanel.add(editButton1);
        topPanel.add(reloadButton1);
        topPanel.add(saveButton1);
        topPanel.add(deleteButton1);
        topPanel.add(exportButton1);
        topPanel.add(filterButton1);
        topPanel.add(navigatorBar1);

        getContentPane().add(topPanel, java.awt.BorderLayout.NORTH);

        gridControl.setDeleteButton(deleteButton1       );
        gridControl.setEditButton(editButton1);
        gridControl.setExportButton(exportButton1);
        gridControl.setFilterButton(filterButton1);
        gridControl.setGridDataLocator(this.getGridDataLocator());
        gridControl.setInsertButton(insertButton1);
        gridControl.setNavBar(navigatorBar1);
        gridControl.setReloadButton(reloadButton1);
        gridControl.setSaveButton(saveButton1);
        gridControl.setValueObjectClassName(getValueObjectClassName());

        idColumn.setColumnName("id");
        idColumn.setColumnRequired(false);
        idColumn.setHeaderColumnName("ID");
        gridControl.getColumnContainer().add(idColumn);

        passportNoColumn.setColumnName("passportNo");
        passportNoColumn.setEditableOnEdit(true);
        passportNoColumn.setEditableOnInsert(true);
        passportNoColumn.setHeaderColumnName("Passport No");
        gridControl.getColumnContainer().add(passportNoColumn);

        tinColumn.setColumnName("tin");
        tinColumn.setEditableOnEdit(true);
        tinColumn.setEditableOnInsert(true);
        tinColumn.setHeaderColumnName("TIN");
        gridControl.getColumnContainer().add(tinColumn);

        nameColumn.setColumnName("name");
        nameColumn.setEditableOnEdit(true);
        nameColumn.setEditableOnInsert(true);
        nameColumn.setHeaderColumnName("Name");
        gridControl.getColumnContainer().add(nameColumn);

        genderComboColumn.setColumnName("gender");
        genderComboColumn.setDomainId("GNDR");
        genderComboColumn.setEditableOnEdit(true);
        genderComboColumn.setEditableOnInsert(true);
        genderComboColumn.setHeaderColumnName("Gender");
        gridControl.getColumnContainer().add(genderComboColumn);

        textColumn1.setColumnName("address");
        textColumn1.setEditableOnEdit(true);
        textColumn1.setEditableOnInsert(true);
        textColumn1.setHeaderColumnName("Address");
        gridControl.getColumnContainer().add(textColumn1);

        textColumn2.setColumnName("placeOfBirth");
        textColumn2.setEditableOnEdit(true);
        textColumn2.setEditableOnInsert(true);
        textColumn2.setHeaderColumnName("Place of Bitrh");
        gridControl.getColumnContainer().add(textColumn2);

        dateColumn1.setColumnName("dob");
        dateColumn1.setEditableOnEdit(true);
        dateColumn1.setEditableOnInsert(true);
        dateColumn1.setHeaderColumnName("DOB");
        gridControl.getColumnContainer().add(dateColumn1);

        villageCodLookupColumn.setColumnName("village.name");
        villageCodLookupColumn.setEditableOnEdit(true);
        villageCodLookupColumn.setEditableOnInsert(true);
        villageCodLookupColumn.setHeaderColumnName("Village");
        gridControl.getColumnContainer().add(villageCodLookupColumn);

        getContentPane().add(gridControl, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openswing.swing.table.columns.client.DateColumn dateColumn1;
    private org.openswing.swing.client.DeleteButton deleteButton1;
    private org.openswing.swing.client.EditButton editButton1;
    private org.openswing.swing.client.ExportButton exportButton1;
    private org.openswing.swing.client.FilterButton filterButton1;
    private org.openswing.swing.table.columns.client.ComboColumn genderComboColumn;
    private org.openswing.swing.client.GridControl gridControl;
    private org.openswing.swing.table.columns.client.IntegerColumn idColumn;
    private org.openswing.swing.client.InsertButton insertButton1;
    private org.openswing.swing.table.columns.client.TextColumn nameColumn;
    private org.openswing.swing.client.NavigatorBar navigatorBar1;
    private org.openswing.swing.table.columns.client.TextColumn passportNoColumn;
    private org.openswing.swing.client.ReloadButton reloadButton1;
    private org.openswing.swing.client.SaveButton saveButton1;
    private org.openswing.swing.table.columns.client.TextColumn textColumn1;
    private org.openswing.swing.table.columns.client.TextColumn textColumn2;
    private org.openswing.swing.table.columns.client.TextColumn tinColumn;
    private javax.swing.JPanel topPanel;
    private org.openswing.swing.table.columns.client.CodLookupColumn villageCodLookupColumn;
    // End of variables declaration//GEN-END:variables
}
