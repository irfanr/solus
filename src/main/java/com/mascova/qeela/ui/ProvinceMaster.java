/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mascova.qeela.ui;

import com.mascova.qeela.controller.CountryLookupController;
import com.mascova.qeela.controller.ProvinceMasterController;
import org.openswing.swing.client.GridControl;
import org.openswing.swing.mdi.client.InternalFrame;
import org.openswing.swing.table.java.GridDataLocator;

/**
 *
 * @author irfan
 */
public class ProvinceMaster extends InternalFrame {

    private ProvinceMasterController pmc = null;
    private CountryLookupController clc = null;

    /**
     * Creates new form ProvinceMaster
     */
    public ProvinceMaster(ProvinceMasterController pmc, CountryLookupController clc) {
        this.pmc = pmc;
        this.clc = clc;
        initComponents();
        gridControl.setController(pmc);
        countryCodLookupColumn.setLookupController(clc);
        this.setSize(750, 330);
    }

    public GridControl getGrid() {

        return this.gridControl;
    }

    private GridDataLocator getGridDataLocator() {

        return pmc;
    }

    private String getValueObjectClassName() {
        return "com.mascova.qeela.entity.Province";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        insertButton1 = new org.openswing.swing.client.InsertButton();
        editButton1 = new org.openswing.swing.client.EditButton();
        reloadButton1 = new org.openswing.swing.client.ReloadButton();
        saveButton1 = new org.openswing.swing.client.SaveButton();
        deleteButton1 = new org.openswing.swing.client.DeleteButton();
        exportButton1 = new org.openswing.swing.client.ExportButton();
        filterButton1 = new org.openswing.swing.client.FilterButton();
        navigatorBar1 = new org.openswing.swing.client.NavigatorBar();
        gridControl = new org.openswing.swing.client.GridControl();
        codeDecimalColumn = new org.openswing.swing.table.columns.client.DecimalColumn();
        codeTextColumn = new org.openswing.swing.table.columns.client.TextColumn();
        nameTextColumn = new org.openswing.swing.table.columns.client.TextColumn();
        countryCodLookupColumn = new org.openswing.swing.table.columns.client.CodLookupColumn();

        topPanel.add(insertButton1);
        topPanel.add(editButton1);
        topPanel.add(reloadButton1);
        topPanel.add(saveButton1);
        topPanel.add(deleteButton1);
        topPanel.add(exportButton1);
        topPanel.add(filterButton1);
        topPanel.add(navigatorBar1);

        getContentPane().add(topPanel, java.awt.BorderLayout.NORTH);

        gridControl.setDeleteButton(deleteButton1       );
        gridControl.setEditButton(editButton1);
        gridControl.setExportButton(exportButton1);
        gridControl.setFilterButton(filterButton1);
        gridControl.setGridDataLocator(this.getGridDataLocator());
        gridControl.setInsertButton(insertButton1);
        gridControl.setNavBar(navigatorBar1);
        gridControl.setReloadButton(reloadButton1);
        gridControl.setSaveButton(saveButton1);
        gridControl.setValueObjectClassName(getValueObjectClassName());

        codeDecimalColumn.setColumnName("id");
        codeDecimalColumn.setColumnRequired(false);
        gridControl.getColumnContainer().add(codeDecimalColumn);

        codeTextColumn.setColumnName("code");
        codeTextColumn.setEditableOnEdit(true);
        codeTextColumn.setEditableOnInsert(true);
        gridControl.getColumnContainer().add(codeTextColumn);

        nameTextColumn.setColumnName("name");
        nameTextColumn.setEditableOnEdit(true);
        nameTextColumn.setEditableOnInsert(true);
        gridControl.getColumnContainer().add(nameTextColumn);

        countryCodLookupColumn.setColumnName("country.name");
        countryCodLookupColumn.setEditableOnEdit(true);
        countryCodLookupColumn.setEditableOnInsert(true);
        gridControl.getColumnContainer().add(countryCodLookupColumn);

        getContentPane().add(gridControl, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openswing.swing.table.columns.client.DecimalColumn codeDecimalColumn;
    private org.openswing.swing.table.columns.client.TextColumn codeTextColumn;
    private org.openswing.swing.table.columns.client.CodLookupColumn countryCodLookupColumn;
    private org.openswing.swing.client.DeleteButton deleteButton1;
    private org.openswing.swing.client.EditButton editButton1;
    private org.openswing.swing.client.ExportButton exportButton1;
    private org.openswing.swing.client.FilterButton filterButton1;
    private org.openswing.swing.client.GridControl gridControl;
    private org.openswing.swing.client.InsertButton insertButton1;
    private org.openswing.swing.table.columns.client.TextColumn nameTextColumn;
    private org.openswing.swing.client.NavigatorBar navigatorBar1;
    private org.openswing.swing.client.ReloadButton reloadButton1;
    private org.openswing.swing.client.SaveButton saveButton1;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
}
