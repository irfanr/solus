/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mascova.qeela.ui;

import com.mascova.qeela.controller.PersonMasterController;
import com.mascova.qeela.controller.VillageLookupController;
import org.openswing.swing.client.GridControl;
import org.openswing.swing.mdi.client.InternalFrame;
import org.openswing.swing.table.java.GridDataLocator;

/**
 *
 * @author irfan
 */
public class PersonMaster extends InternalFrame {

    private PersonMasterController pmc = null;
    private VillageLookupController vlc = null;

    /**
     * Creates new form PersonMaster
     */
    public PersonMaster(PersonMasterController pmc, VillageLookupController vlc) {
        this.pmc = pmc;
        this.vlc= vlc;
        initComponents();
        personGridControl.setController(pmc);
        villageCodLookupColumn.setLookupController(vlc);
        this.setSize(750, 330);
    }

    public GridControl getGrid() {

        return this.personGridControl;
    }

    private GridDataLocator getGridDataLocator() {

        return pmc;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        insertButton1 = new org.openswing.swing.client.InsertButton();
        editButton1 = new org.openswing.swing.client.EditButton();
        reloadButton1 = new org.openswing.swing.client.ReloadButton();
        saveButton1 = new org.openswing.swing.client.SaveButton();
        deleteButton1 = new org.openswing.swing.client.DeleteButton();
        exportButton1 = new org.openswing.swing.client.ExportButton();
        filterButton1 = new org.openswing.swing.client.FilterButton();
        navigatorBar1 = new org.openswing.swing.client.NavigatorBar();
        personGridControl = new org.openswing.swing.client.GridControl();
        idColumn = new org.openswing.swing.table.columns.client.IntegerColumn();
        textColumn1 = new org.openswing.swing.table.columns.client.TextColumn();
        textColumn2 = new org.openswing.swing.table.columns.client.TextColumn();
        name1Column = new org.openswing.swing.table.columns.client.TextColumn();
        name2Column = new org.openswing.swing.table.columns.client.TextColumn();
        name3Column = new org.openswing.swing.table.columns.client.TextColumn();
        name4Column = new org.openswing.swing.table.columns.client.TextColumn();
        addressColumn = new org.openswing.swing.table.columns.client.TextColumn();
        genderComboColumn = new org.openswing.swing.table.columns.client.ComboColumn();
        textColumn4 = new org.openswing.swing.table.columns.client.TextColumn();
        dobColumn = new org.openswing.swing.table.columns.client.DateColumn();
        textColumn3 = new org.openswing.swing.table.columns.client.TextColumn();
        villageCodLookupColumn = new org.openswing.swing.table.columns.client.CodLookupColumn();

        topPanel.add(insertButton1);
        topPanel.add(editButton1);
        topPanel.add(reloadButton1);
        topPanel.add(saveButton1);
        topPanel.add(deleteButton1);
        topPanel.add(exportButton1);
        topPanel.add(filterButton1);
        topPanel.add(navigatorBar1);

        getContentPane().add(topPanel, java.awt.BorderLayout.NORTH);

        personGridControl.setDeleteButton(deleteButton1);
        personGridControl.setEditButton(editButton1);
        personGridControl.setExportButton(exportButton1);
        personGridControl.setFilterButton(filterButton1);
        personGridControl.setGridDataLocator(this.getGridDataLocator());
        personGridControl.setInsertButton(insertButton1);
        personGridControl.setNavBar(navigatorBar1);
        personGridControl.setReloadButton(reloadButton1);
        personGridControl.setSaveButton(saveButton1);
        personGridControl.setValueObjectClassName("com.mascova.qeela.entity.Person");

        idColumn.setColumnName("id");
        idColumn.setColumnRequired(false);
        idColumn.setColumnSortable(true);
        personGridControl.getColumnContainer().add(idColumn);

        textColumn1.setColumnName("passportNo");
        textColumn1.setColumnSortable(true);
        textColumn1.setEditableOnEdit(true);
        textColumn1.setEditableOnInsert(true);
        textColumn1.setHeaderColumnName("Passport No");
        personGridControl.getColumnContainer().add(textColumn1);

        textColumn2.setColumnName("npwp");
        textColumn2.setColumnSortable(true);
        textColumn2.setEditableOnEdit(true);
        textColumn2.setEditableOnInsert(true);
        textColumn2.setHeaderColumnName("NPWP");
        personGridControl.getColumnContainer().add(textColumn2);

        name1Column.setColumnFilterable(true);
        name1Column.setColumnName("name1");
        name1Column.setColumnSortable(true);
        name1Column.setEditableOnEdit(true);
        name1Column.setEditableOnInsert(true);
        personGridControl.getColumnContainer().add(name1Column);

        name2Column.setColumnFilterable(true);
        name2Column.setColumnName("name2");
        name2Column.setColumnSortable(true);
        name2Column.setEditableOnEdit(true);
        name2Column.setEditableOnInsert(true);
        personGridControl.getColumnContainer().add(name2Column);

        name3Column.setColumnName("name3");
        name3Column.setColumnSortable(true);
        name3Column.setEditableOnEdit(true);
        name3Column.setEditableOnInsert(true);
        personGridControl.getColumnContainer().add(name3Column);

        name4Column.setColumnName("name4");
        name4Column.setColumnSortable(true);
        name4Column.setEditableOnEdit(true);
        name4Column.setEditableOnInsert(true);
        personGridControl.getColumnContainer().add(name4Column);

        addressColumn.setColumnName("address");
        addressColumn.setColumnSortable(true);
        addressColumn.setEditableOnEdit(true);
        addressColumn.setEditableOnInsert(true);
        personGridControl.getColumnContainer().add(addressColumn);

        genderComboColumn.setColumnName("gender");
        genderComboColumn.setDomainId("GNDR");
        genderComboColumn.setEditableOnEdit(true);
        genderComboColumn.setEditableOnInsert(true);
        personGridControl.getColumnContainer().add(genderComboColumn);

        textColumn4.setColumnName("placeOfBirth");
        textColumn4.setColumnSortable(true);
        textColumn4.setEditableOnEdit(true);
        textColumn4.setEditableOnInsert(true);
        personGridControl.getColumnContainer().add(textColumn4);

        dobColumn.setColumnFilterable(true);
        dobColumn.setColumnName("dob");
        dobColumn.setColumnSortable(true);
        dobColumn.setEditableOnEdit(true);
        dobColumn.setEditableOnInsert(true);
        dobColumn.setHeaderColumnName("Date of Birth");
        personGridControl.getColumnContainer().add(dobColumn);

        textColumn3.setColumnName("motherMaiden");
        textColumn3.setColumnSortable(true);
        textColumn3.setEditableOnEdit(true);
        textColumn3.setEditableOnInsert(true);
        textColumn3.setHeaderColumnName("Mother Maiden");
        personGridControl.getColumnContainer().add(textColumn3);

        villageCodLookupColumn.setColumnName("village.name");
        villageCodLookupColumn.setEditableOnEdit(true);
        villageCodLookupColumn.setEditableOnInsert(true);
        personGridControl.getColumnContainer().add(villageCodLookupColumn);

        getContentPane().add(personGridControl, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openswing.swing.table.columns.client.TextColumn addressColumn;
    private org.openswing.swing.client.DeleteButton deleteButton1;
    private org.openswing.swing.table.columns.client.DateColumn dobColumn;
    private org.openswing.swing.client.EditButton editButton1;
    private org.openswing.swing.client.ExportButton exportButton1;
    private org.openswing.swing.client.FilterButton filterButton1;
    private org.openswing.swing.table.columns.client.ComboColumn genderComboColumn;
    private org.openswing.swing.table.columns.client.IntegerColumn idColumn;
    private org.openswing.swing.client.InsertButton insertButton1;
    private org.openswing.swing.table.columns.client.TextColumn name1Column;
    private org.openswing.swing.table.columns.client.TextColumn name2Column;
    private org.openswing.swing.table.columns.client.TextColumn name3Column;
    private org.openswing.swing.table.columns.client.TextColumn name4Column;
    private org.openswing.swing.client.NavigatorBar navigatorBar1;
    private org.openswing.swing.client.GridControl personGridControl;
    private org.openswing.swing.client.ReloadButton reloadButton1;
    private org.openswing.swing.client.SaveButton saveButton1;
    private org.openswing.swing.table.columns.client.TextColumn textColumn1;
    private org.openswing.swing.table.columns.client.TextColumn textColumn2;
    private org.openswing.swing.table.columns.client.TextColumn textColumn3;
    private org.openswing.swing.table.columns.client.TextColumn textColumn4;
    private javax.swing.JPanel topPanel;
    private org.openswing.swing.table.columns.client.CodLookupColumn villageCodLookupColumn;
    // End of variables declaration//GEN-END:variables
}
